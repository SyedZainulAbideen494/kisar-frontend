{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\KISAR front end\\\\src\\\\Main-Folder\\\\Home\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport './home.css';\nimport Navbar from \"../components/navbar\";\nimport notiIcon from '../images/icons8-notifications-64.png';\nimport settingsIcon from '../images/icons8-settings-50.png';\nimport menuIcon from '../images/icons8-menu-50.png';\nimport UserList from \"../users/users\";\nimport axios from 'axios';\nimport { API_ROUTES } from '../app-modules/api_routes';\nimport CheckParticipation from \"./part\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [currentEvent, setCurrentEvent] = useState(null);\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n  const fetchCurrentEvent = () => {\n    axios.get(API_ROUTES.currentEvent).then(response => {\n      setCurrentEvent(response.data);\n    }).catch(error => {\n      console.error('Error fetching current event:', error);\n    });\n  };\n  useEffect(() => {\n    fetchCurrentEvent();\n  }, []);\n  const handleEndEvent = () => {\n    axios.post(API_ROUTES.endEvent).then(response => {\n      setCurrentEvent(null); // Update state to reflect that the event has ended\n      console.log('Event ended successfully:', response.data);\n      // Optionally, you can update the UI or show a success message\n    }).catch(error => {\n      console.error('Error ending event:', error);\n      // Optionally, you can display an error message to the user\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div_main_dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard_header_container\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"dashboard_header\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header_left\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: menuIcon,\n              alt: \"Menu\",\n              className: \"menu-icon\",\n              onClick: toggleMenu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Dashboard\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n        isMenuOpen: isMenuOpen,\n        toggleMenu: toggleMenu\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-event-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"current-event\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Current Event:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), currentEvent ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Title: \", currentEvent.title]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Start Time: \", currentEvent.start_time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"End Time: \", currentEvent.end_time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"end-event-btn\",\n              onClick: handleEndEvent,\n              children: \"End Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No active event\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"kdht5yFLl43PJp6qO7itaMBG5tI=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","Navbar","notiIcon","settingsIcon","menuIcon","UserList","axios","API_ROUTES","CheckParticipation","jsxDEV","_jsxDEV","Dashboard","_s","isMenuOpen","setIsMenuOpen","currentEvent","setCurrentEvent","toggleMenu","fetchCurrentEvent","get","then","response","data","catch","error","console","handleEndEvent","post","endEvent","log","children","className","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","start_time","end_time","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/KISAR front end/src/Main-Folder/Home/dashboard.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport './home.css';\r\nimport Navbar from \"../components/navbar\";\r\nimport notiIcon from '../images/icons8-notifications-64.png';\r\nimport settingsIcon from '../images/icons8-settings-50.png';\r\nimport menuIcon from '../images/icons8-menu-50.png';\r\nimport UserList from \"../users/users\";\r\nimport axios from 'axios';\r\nimport { API_ROUTES } from '../app-modules/api_routes';\r\nimport CheckParticipation from \"./part\";\r\n\r\nconst Dashboard = () => {\r\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n    const [currentEvent, setCurrentEvent] = useState(null);\r\n\r\n    const toggleMenu = () => {\r\n        setIsMenuOpen(!isMenuOpen);\r\n    };\r\n\r\n    const fetchCurrentEvent = () => {\r\n        axios.get(API_ROUTES.currentEvent)\r\n            .then(response => {\r\n                setCurrentEvent(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error('Error fetching current event:', error);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchCurrentEvent();\r\n    }, []);\r\n\r\n    const handleEndEvent = () => {\r\n        axios.post(API_ROUTES.endEvent)\r\n            .then(response => {\r\n                setCurrentEvent(null); // Update state to reflect that the event has ended\r\n                console.log('Event ended successfully:', response.data);\r\n                // Optionally, you can update the UI or show a success message\r\n            })\r\n            .catch(error => {\r\n                console.error('Error ending event:', error);\r\n                // Optionally, you can display an error message to the user\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"div_main_dashboard\">\r\n                <div className=\"dashboard_header_container\">\r\n                    <header className=\"dashboard_header\">\r\n                        <div className=\"header_left\">\r\n                            <img src={menuIcon} alt=\"Menu\" className=\"menu-icon\" onClick={toggleMenu} />\r\n                            <h1>Dashboard</h1>\r\n                        </div>\r\n                    </header>\r\n                </div>\r\n                <Navbar isMenuOpen={isMenuOpen} toggleMenu={toggleMenu} />\r\n                <div className=\"current-event-container\">\r\n                    <div className=\"current-event\">\r\n                        <h2>Current Event:</h2>\r\n                        {currentEvent ? (\r\n                            <div>\r\n                                <p>Title: {currentEvent.title}</p>\r\n                                <p>Start Time: {currentEvent.start_time}</p>\r\n                                <p>End Time: {currentEvent.end_time}</p>\r\n                                <button className=\"end-event-btn\" onClick={handleEndEvent}>End Event</button>\r\n                            </div>\r\n                        ) : (\r\n                            <p>No active event</p>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <UserList />\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}