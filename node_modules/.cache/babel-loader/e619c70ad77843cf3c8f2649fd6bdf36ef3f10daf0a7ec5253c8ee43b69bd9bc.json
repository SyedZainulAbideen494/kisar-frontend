{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\Whatsapp Front-end\\\\src\\\\Main-Folder\\\\auth\\\\forgot-password.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport './passwordreset.css'; // Import the CSS file\nimport { API_ROUTES } from '../app-modules/api_routes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordReset = () => {\n  _s();\n  const {\n    email\n  } = useParams();\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handlePasswordReset = async () => {\n    try {\n      // Make a request to your server to update the password\n      const response = await axios.post(API_ROUTES.PasswordReset, {\n        email,\n        newPassword\n      });\n\n      // Assuming your server sends a success message\n      setMessage(response.data.message);\n    } catch (error) {\n      // Handle error, e.g., display an error message\n      setMessage('Error resetting password. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Password Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Resetting password for \", email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"newPassword\",\n      children: \"New Password:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"newPassword\",\n      value: newPassword,\n      onChange: e => setNewPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePasswordReset,\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordReset, \"zyyO9WyDL14MLKAgDRUf6BQbisI=\", false, function () {\n  return [useParams];\n});\n_c = PasswordReset;\nexport default PasswordReset;\nvar _c;\n$RefreshReg$(_c, \"PasswordReset\");","map":{"version":3,"names":["React","useState","useParams","axios","API_ROUTES","jsxDEV","_jsxDEV","PasswordReset","_s","email","newPassword","setNewPassword","message","setMessage","handlePasswordReset","response","post","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Desktop/Whatsapp Front-end/src/Main-Folder/auth/forgot-password.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './passwordreset.css'; // Import the CSS file\r\nimport { API_ROUTES } from '../app-modules/api_routes';\r\n\r\nconst PasswordReset = () => {\r\n  const { email } = useParams();\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handlePasswordReset = async () => {\r\n    try {\r\n      // Make a request to your server to update the password\r\n      const response = await axios.post(API_ROUTES.PasswordReset, { email, newPassword });\r\n\r\n      // Assuming your server sends a success message\r\n      setMessage(response.data.message);\r\n    } catch (error) {\r\n      // Handle error, e.g., display an error message\r\n      setMessage('Error resetting password. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reset-password-container\">\r\n      <h2>Password Reset</h2>\r\n      <p>Resetting password for {email}</p>\r\n      \r\n      <label htmlFor=\"newPassword\">New Password:</label>\r\n      <input\r\n        type=\"password\"\r\n        id=\"newPassword\"\r\n        value={newPassword}\r\n        onChange={(e) => setNewPassword(e.target.value)}\r\n      />\r\n\r\n      <button onClick={handlePasswordReset}>Reset Password</button>\r\n\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordReset;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB,CAAC,CAAC;AAC9B,SAASC,UAAU,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAM,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC7B,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAACZ,UAAU,CAACG,aAAa,EAAE;QAAEE,KAAK;QAAEC;MAAY,CAAC,CAAC;;MAEnF;MACAG,UAAU,CAACE,QAAQ,CAACE,IAAI,CAACL,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACd;MACAL,UAAU,CAAC,6CAA6C,CAAC;IAC3D;EACF,CAAC;EAED,oBACEP,OAAA;IAAKa,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACvCd,OAAA;MAAAc,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBlB,OAAA;MAAAc,QAAA,GAAG,yBAAuB,EAACX,KAAK;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErClB,OAAA;MAAOmB,OAAO,EAAC,aAAa;MAAAL,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAClDlB,OAAA;MACEoB,IAAI,EAAC,UAAU;MACfC,EAAE,EAAC,aAAa;MAChBC,KAAK,EAAElB,WAAY;MACnBmB,QAAQ,EAAGC,CAAC,IAAKnB,cAAc,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eAEFlB,OAAA;MAAQ0B,OAAO,EAAElB,mBAAoB;MAAAM,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAE5DZ,OAAO,iBAAIN,OAAA;MAAAc,QAAA,EAAIR;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAAChB,EAAA,CApCID,aAAa;EAAA,QACCL,SAAS;AAAA;AAAA+B,EAAA,GADvB1B,aAAa;AAsCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}